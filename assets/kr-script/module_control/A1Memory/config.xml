<?xml version="1.0" encoding="UTF-8" ?>
<resource dir="file:///android_asset/kr-script/module_control/A1Memory" />
<group>
        <switch shell="hidden" title="是否启用白名单">
        <desc>启用后白名单中的进程不会被杀死</desc>
        <summary sh="sh ./kr-script/module_control/A1Memory/summary_whiteList_optional.sh" />
        <get>run get_whiteList_optional.sh</get>
        <set>run set_whiteList_optional.sh</set>
        </switch>
        <switch shell="hidden" title="是否启用智能白名单">
        <desc>启用后将会自动识别进程加入白名单</desc>
        <summary sh="sh ./kr-script/module_control/A1Memory/summary_whiteList_smart.sh" />
        <get>run get_whiteList_smart.sh</get>
        <set>run set_whiteList_smart.sh</set>
        </switch>
        <switch shell="hidden" title="是否启用系统白名单">
        <desc>启用后所有的系统软件都会加入白名单</desc>
        <summary sh="sh ./kr-script/module_control/A1Memory/summary_whiteList_system.sh" />
        <get>run get_whiteList_system.sh</get>
        <set>run set_whiteList_system.sh</set>
        </switch>
        <action reload="app_list" shell="hidden">
            <title>白名单应用</title>
            <desc>设置需要添加到白名单的应用</desc>
            <param name="apps" type="app" title="请选择你想要加入到白名单的应用" desc="" multiple="multiple" value-sh="grep '^WHITE' /sdcard/Android/HChai/HC_memory/名单列表.conf | sed 's/^WHITE //'" />
            <set>run apps.sh</set>
		<summary sh="awk '/\{/{f++} f==1; /}/{if (f==1) print; exit}' /sdcard/Android/HChai/HC_memory/名单列表.conf | sed 's/{//;s/}//'" />
        </action>
</group>
<group>
        <switch shell="hidden" title="是否启用乖巧模式">
        <desc>杀死应用的子进程，试图阻止主进程拉起子进程，从而实现应用减少CPU和内存的使用</desc>
        <summary sh="sh ./kr-script/module_control/A1Memory/summary_clever_enable.sh" />
        <get>run get_clever_enable.sh</get>
        <set>run set_clever_enable.sh</set>
        </switch>
        <action reload="app_list" shell="">
            <title>添加应用进程</title>
            <desc>设置需要添加到乖巧名单的应用进程</desc>
            <param name="app" type="app" title="选择正在运行中的应用" desc="选择后点击确定，会自动将正在运行的应用进程添加到名单列表中" multiple="" value-sh="" />
            <set>run child_processes.sh</set>
		<summary sh="" />
        </action>
        <action shell="hidden">
            <title>编辑乖巧名单</title>
            <desc>点击可编辑乖巧名单进程</desc>
            <param name="child_processes" title="可以在名单中添加注释#" desc="可以在不需要kill的进程前添加注释符#，或者直接删掉它" value-sh="awk '/\{/{f++} f==2; /}/{if (f==2) print}' /sdcard/Android/HChai/HC_memory/名单列表.conf | sed 's/{//;s/}//'" />
            <set>run child_processes_list.sh</set>
		<summary sh="" />
        </action>
        <action>
        <title>查看乖巧名单</title>
        <desc>点击查看已添加的乖巧名单</desc>
        <set>awk '/\{/{f++} f==2; /}/{if (f==2) print}' /sdcard/Android/HChai/HC_memory/名单列表.conf | sed 's/{//;s/}//'</set>
        </action>
</group>
<group>
        <switch shell="hidden" title="是否启用疯狂杀戮">
        <desc>调用内核的api来杀死一些进程，目前暂不清楚原理，但是可以有效的杀死一些进程</desc>
        <summary sh="sh ./kr-script/module_control/A1Memory/summary_crazyKill_enable.sh" />
        <get>run get_crazyKill_enable.sh</get>
        <set>run set_crazyKill_enable.sh</set>
        </switch>
</group>
<group>
        <switch shell="hidden" title="是否启用应用休眠">
        <desc>启用应用休眠以减少CPU和内存使用操作</desc>
        <summary sh="sh ./kr-script/module_control/A1Memory/summary_appSleep_enable.sh" />
        <get>run get_appSleep_enable.sh</get>
        <set>run set_appSleep_enable.sh</set>
        </switch>
	<action shell="hidden">
		<title>空闲后针对用户</title>
		<desc>空闲后针对用户的设置</desc>
		<param name="idle" value-sh="sh ./kr-script/module_control/A1Memory/get_appSleep_idle.sh" required="true" title="“当前用户”对多开不生效">
			<option value="all">全部用户</option>
			<option value="current">当前用户</option>
		</param>
		<set>run set_appSleep_idle.sh</set>
		<summary sh="sh ./kr-script/module_control/A1Memory/summary_appSleep_idle.sh" />
	</action>
	<action shell="hidden">
		<title>后台应用状态</title>
		<desc>后台应用状态设置</desc>
		<param name="bg" value-sh="sh ./kr-script/module_control/A1Memory/summary_appSleep_bg.sh" required="true" title="">
			<option value="ignore">忽略唤醒请求和拉起应用请求</option>
			<option value="allow">允许唤醒请求和拉起应用请求</option>
			<option value="deny">拒绝唤醒请求和拉起应用请求</option>
		</param>
		<set>run set_appSleep_bg.sh</set>
		<summary sh="sh ./kr-script/module_control/A1Memory/summary_appSleep_bg.sh" />
	</action>
	<action shell="hidden">
		<title>前台应用状态</title>
		<desc>前台应用状态设置</desc>
		<param name="top" value-sh="sh ./kr-script/module_control/A1Memory/summary_appSleep_top.sh" required="true" title="">
			<option value="ignore">忽略唤醒请求和拉起应用请求</option>
			<option value="allow">允许唤醒请求和拉起应用请求</option>
			<option value="deny">拒绝唤醒请求和拉起应用请求</option>
		</param>
		<set>run set_appSleep_top.sh</set>
		<summary sh="sh ./kr-script/module_control/A1Memory/summary_appSleep_top.sh" />
	</action>
</group>
<group>
        <action shell="hidden">
		<title>主函数运行参数</title>
		<desc>这个参数可以用于控制在前台应用变化后的一段时间内避免主函数的重复执行，以防止不必要的操作或资源浪费</desc>
		<param
			name="sleep"
			title="设置为1秒意味着在前台应用发生变化后，等待1秒后切换前台才会再次执行主函数。换句话说，在这1秒的时间内切换前台，主函数不会被执行"
			desc="单位：秒"
			type="seekbar"
			min="0"
			max="60"
			value-sh="run summary_afterTopChange_sleep.sh"/>
		<set>run set_afterTopChange_sleep.sh</set>
		<summary sh="run summary_afterTopChange_sleep.sh" />
        </action>
</group>
<group>
        <switch shell="hidden" title="A1内存管理">
        <desc>结束不必要的进程以释放内存</desc>
        <summary sh="sh ./kr-script/module_control/A1Memory/summary_a1Memory_enable.sh" />
        <get>run get_a1Memory_enable.sh</get>
        <set>run set_a1Memory_enable.sh</set>
        </switch>
        <action shell="hidden">
		<title>设定oomAdj值</title>
		<desc>oomAdj表示用于判断进程是否被结束的调整值。只有进程的oomAdj值大于设定的"oomAdj"数值时，它们才会被A1内存管理结束</desc>
		<param
			name="oomAdj"
			title="需要注意的是，并非所有进程都会被识别和结束，只有那些被算法判断为非必要进程且oomAdj值大于指定数值的进程才会被结束"
			desc="数值越大，被结束的进程就越少，反之，数值越小，被结束的进程就越多"
			type="seekbar"
			min="0"
			max="1000"
			value-sh="run summary_a1Memory_oomAdj.sh"/>
		<set>run set_a1Memory_oomAdj.sh</set>
		<summary sh="run summary_a1Memory_oomAdj.sh" />
        </action>
</group>
<group>
        <switch shell="hidden" title="是否启用应用自动释放内存">
        <desc>启用A1内存管理将会执行应用自动释放内存操作，停用A1内存管理将不会执行应用自动释放内存操作</desc>
        <summary sh="sh ./kr-script/module_control/A1Memory/summary_freed_enable.sh" />
        <get>run get_freed_enable.sh</get>
        <set>run set_freed_enable.sh</set>
        </switch>
        <action shell="hidden">
		<title>释放内存的程度</title>
		<desc>数值越高，释放的内存就越多，反之，数值越低，释放的内存就越少</desc>
		<param
			name="level"
			title=""
			desc=""
			type="seekbar"
			min="0"
			max="100"
			value-sh="run summary_freed_level.sh"/>
		<set>run set_freed_level.sh</set>
		<summary sh="run summary_freed_level.sh" />
        </action>
        <action shell="hidden">
		<title>前台切换释放</title>
		<desc>前台应用切换多少次后执行一次自动释放操作</desc>
		<param
			name="change"
			title=""
			desc="推荐10-30之间"
			type="seekbar"
			min="0"
			max="50"
			value-sh="sh ./kr-script/module_control/A1Memory/summary_freed_change.sh"/>
		<set>run set_freed_change.sh</set>
		<summary sh="sh ./kr-script/module_control/A1Memory/summary_freed_change.sh" />
        </action>
</group>
<group>
        <switch shell="hidden" title="是否启用hook lmkd">
        <desc>使用hook让lmkd无法杀死后台进程</desc>
        <summary sh="sh ./kr-script/module_control/A1Memory/summary_initInjection_enable.sh" />
        <get>run get_initInjection_enable.sh</get>
        <set>run set_initInjection_enable.sh</set>
        </switch>
        <switch shell="hidden" title="是否启用内存阈值">
        <desc>在内存占用到达一定程度后，不再阻止lmkd杀进程</desc>
        <summary sh="sh ./kr-script/module_control/A1Memory/summary_memThreshold_enable.sh" />
        <get>run get_memThreshold_enable.sh</get>
        <set>run set_memThreshold_enable.sh</set>
        </switch>
        <action shell="hidden">
		<title>内存阈值</title>
		<desc>防止内存占用过高导致系统卡顿，但是也会导致后台进程被杀死。</desc>
		<param
			name="value"
			title="通过设置内存阈值来控制内存占用到达一定程度后，不再阻止lmkd杀进程"
			desc="单位：％"
			type="seekbar"
			min="0"
			max="100"
			value-sh="run summary_memThreshold_value.sh"/>
		<set>run set_memThreshold_value.sh</set>
		<summary sh="run summary_memThreshold_value.sh" />
        </action>
        <switch shell="hidden" title="是否hook kill函数">
        <desc>启用将会hook kill函数，停用则不hook kill函数</desc>
        <summary sh="sh ./kr-script/module_control/A1Memory/summary_hookFunc_kill.sh" />
        <get>run get_hookFunc_kill.sh</get>
        <set>run set_hookFunc_kill.sh</set>
        </switch>
        <switch shell="hidden" title="是否hook pidfd_send_signal函数">
        <desc>启用将会hook pidfd_send_signal函数，停用则不hook pidfd_send_signal函数</desc>
        <summary sh="sh ./kr-script/module_control/A1Memory/summary_hookFunc_pidfd_send_signal.sh" />
        <get>run get_hookFunc_pidfd_send_signal.sh</get>
        <set>run set_hookFunc_pidfd_send_signal.sh</set>
        </switch>
        <switch shell="hidden" title="是否hook __android_log_print函数">
        <desc>启用将会hook __android_log_print函数，停用则不hook __android_log_print函数&#13;&#10;（不建议启用该功能，因为会导致日志无法输出，还有可能会造成lmkd异常）</desc>
        <summary sh="sh ./kr-script/module_control/A1Memory/summary_hookFunc___android_log_print.sh" />
        <get>run get_hookFunc___android_log_print.sh</get>
        <set>run set_hookFunc___android_log_print.sh</set>
        </switch>
        <action shell="hidden">
		<title>内存信息刷新时间</title>
		<desc>有效避免重复刷新meminfo内存信息造成的性能消耗，你可以通过设置更新时间来控制更新的时间间隔</desc>
		<param
			name="updateTime"
			title="数值越大，更新的时间间隔越长，性能消耗越少，数值越小，更新的时间间隔越短，性能消耗越多"
			desc="推荐取值在30到90之间，单位：秒"
			type="seekbar"
			min="0"
			max="150"
			value-sh="run summary_meminfo_updateTime.sh"/>
		<set>run set_meminfo_updateTime.sh</set>
		<summary sh="run summary_meminfo_updateTime.sh" />
        </action>
</group>
<group>
	<action shell="hidden">
		<title>inlineHook模式</title>
		<desc>默认使用的是dobby来修改函数地址</desc>
		<param name="inlineHook" value-sh="sh ./kr-script/module_control/A1Memory/summary_model_inlineHook.sh" required="true" title="如果无法正常hook，你可以尝试修改为And64InlineHook">
			<option value="dobby">dobby</option>
			<option value="And64InlineHook">And64InlineHook</option>
		</param>
		<set>run set_model_inlineHook.sh</set>
		<summary sh="sh ./kr-script/module_control/A1Memory/summary_model_inlineHook.sh" />
	</action>
</group>
<group>
        <page
            config="settings.xml"
            title="其他设置">
        </page>
</group>